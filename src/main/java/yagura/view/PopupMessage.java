package yagura.view;

import extension.burp.BurpUtil;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Frame;
import javax.swing.Popup;
import javax.swing.PopupFactory;
import java.util.Timer;
import java.util.TimerTask;

/**
 *
 * @author isayan
 */
public class PopupMessage extends javax.swing.JPanel {

    private final Component owner;

    /**
     * Creates new form PopupMessage
     *
     * @param owner
     */
    public PopupMessage(Component owner) {
        this.owner = owner;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblMessage = new javax.swing.JLabel();
        lblTimer = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setPreferredSize(new java.awt.Dimension(600, 120));
        setRequestFocusEnabled(false);
        setLayout(new java.awt.BorderLayout());

        lblMessage.setFont(new java.awt.Font("Yu Gothic UI", 0, 24)); // NOI18N
        lblMessage.setText("Message");
        add(lblMessage, java.awt.BorderLayout.CENTER);

        lblTimer.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lblTimer.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTimer.setText("%d second to popup auto-close");
        lblTimer.setPreferredSize(new java.awt.Dimension(40, 30));
        add(lblTimer, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblMessage;
    private javax.swing.JLabel lblTimer;
    // End of variables declaration//GEN-END:variables

    public String getMessage() {
        return this.lblMessage.getText();
    }

    public void setMessage(String message) {
        this.lblMessage.setText(message);
    }

    public void show(String message, int delay) {
        this.setMessage(message);
        this.show(delay);
    }

    /**
     * *
     * @return
     */
    private Popup createPopup() {
        Frame suiteFrame = BurpUtil.suiteFrame();
        Dimension fitSize = this.getPreferredSize();
        final Popup popup = PopupFactory.getSharedInstance().getPopup(suiteFrame, this, suiteFrame.getX() + (suiteFrame.getWidth() / 2) - (fitSize.width / 2), suiteFrame.getY() + (suiteFrame.getHeight() / 2) - (fitSize.height / 2));
        return popup;
    }

    public void show(int delay) {
        final Popup popup = createPopup();
        popup.show();
        // create a timer to hide the popup later
        final Timer tm = new Timer();
        tm.schedule(new TimerTask() {
            int count = delay / 1000;

            @Override
            public void run() {
                lblTimer.setText(String.format("%d sec. to popup auto-close", count));
                if (count <= 0) {
                    popup.hide();
                    tm.cancel();
                }
                count--;
            }
        }, 0, 1000L);
    }

}
