package yagura.view;

import extension.helpers.SwingUtil;
import javax.swing.JFrame;
import yagura.model.SendToParameterProperty;
import static yagura.model.SendToParameterProperty.LinePartType.FIRST_LINE;
import static yagura.model.SendToParameterProperty.LinePartType.SECOND_LINE;

/**
 *
 * @author isayan
 */
public class SendToParameterPanel extends javax.swing.JPanel {

    private final static java.util.ResourceBundle BUNDLE = java.util.ResourceBundle.getBundle("yagura/resources/Resource");

    /**
     * Creates new form SendToParameter
     */
    public SendToParameterPanel() {
        initComponents();
        customizeComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrpFormat = new javax.swing.ButtonGroup();
        btnGrpReqNotes = new javax.swing.ButtonGroup();
        btnGrpReqNumber = new javax.swing.ButtonGroup();
        btnGrpReqName = new javax.swing.ButtonGroup();
        btnGrpReqNameHistoryNotesType = new javax.swing.ButtonGroup();
        rdoGrpReqNotesHistoryNotesType = new javax.swing.ButtonGroup();
        pnlSendToOverride = new javax.swing.JPanel();
        chkUseReqNotes = new javax.swing.JCheckBox();
        chkUseReqName = new javax.swing.JCheckBox();
        rdoReqNameResponseTitle = new javax.swing.JRadioButton();
        rdoReqNameAnnotationNotes = new javax.swing.JRadioButton();
        rdoReqCommentAnnotationNotes = new javax.swing.JRadioButton();
        rdoReqCommentResponseTitle = new javax.swing.JRadioButton();
        pnlReqNameLineGrp = new javax.swing.JPanel();
        rdoReqNameAllLine = new javax.swing.JRadioButton();
        rdoReqNameFirstLine = new javax.swing.JRadioButton();
        rdoReqNameSecondLine = new javax.swing.JRadioButton();
        pnlReqCommentLineGrp = new javax.swing.JPanel();
        rdoReqCommentAllLine = new javax.swing.JRadioButton();
        rdoReqCommentFirstLine = new javax.swing.JRadioButton();
        rdoReqCommentSecondLine = new javax.swing.JRadioButton();
        chkDummyResponse = new javax.swing.JCheckBox();
        chkOverrideSendToParameter = new javax.swing.JCheckBox();

        pnlSendToOverride.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        chkUseReqNotes.setText("use request notes");

        chkUseReqName.setText("use request name");

        btnGrpReqName.add(rdoReqNameResponseTitle);
        rdoReqNameResponseTitle.setText("response title tag");

        btnGrpReqName.add(rdoReqNameAnnotationNotes);
        rdoReqNameAnnotationNotes.setSelected(true);
        rdoReqNameAnnotationNotes.setText("anotation notes");

        btnGrpReqNotes.add(rdoReqCommentAnnotationNotes);
        rdoReqCommentAnnotationNotes.setSelected(true);
        rdoReqCommentAnnotationNotes.setText("annotation notes");

        btnGrpReqNotes.add(rdoReqCommentResponseTitle);
        rdoReqCommentResponseTitle.setText("response title tag");

        btnGrpReqNameHistoryNotesType.add(rdoReqNameAllLine);
        rdoReqNameAllLine.setText("all line");

        btnGrpReqNameHistoryNotesType.add(rdoReqNameFirstLine);
        rdoReqNameFirstLine.setSelected(true);
        rdoReqNameFirstLine.setText("first line");

        btnGrpReqNameHistoryNotesType.add(rdoReqNameSecondLine);
        rdoReqNameSecondLine.setText("after second line");
        rdoReqNameSecondLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoReqNameSecondLineActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlReqNameLineGrpLayout = new javax.swing.GroupLayout(pnlReqNameLineGrp);
        pnlReqNameLineGrp.setLayout(pnlReqNameLineGrpLayout);
        pnlReqNameLineGrpLayout.setHorizontalGroup(
            pnlReqNameLineGrpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReqNameLineGrpLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdoReqNameAllLine)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(rdoReqNameFirstLine)
                .addGap(52, 52, 52)
                .addComponent(rdoReqNameSecondLine)
                .addContainerGap())
        );
        pnlReqNameLineGrpLayout.setVerticalGroup(
            pnlReqNameLineGrpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReqNameLineGrpLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlReqNameLineGrpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoReqNameAllLine)
                    .addComponent(rdoReqNameFirstLine)
                    .addComponent(rdoReqNameSecondLine))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        rdoGrpReqNotesHistoryNotesType.add(rdoReqCommentAllLine);
        rdoReqCommentAllLine.setText("all line");

        rdoGrpReqNotesHistoryNotesType.add(rdoReqCommentFirstLine);
        rdoReqCommentFirstLine.setText("first line");

        rdoGrpReqNotesHistoryNotesType.add(rdoReqCommentSecondLine);
        rdoReqCommentSecondLine.setSelected(true);
        rdoReqCommentSecondLine.setText("after second line");

        javax.swing.GroupLayout pnlReqCommentLineGrpLayout = new javax.swing.GroupLayout(pnlReqCommentLineGrp);
        pnlReqCommentLineGrp.setLayout(pnlReqCommentLineGrpLayout);
        pnlReqCommentLineGrpLayout.setHorizontalGroup(
            pnlReqCommentLineGrpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReqCommentLineGrpLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdoReqCommentAllLine)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(rdoReqCommentFirstLine)
                .addGap(52, 52, 52)
                .addComponent(rdoReqCommentSecondLine)
                .addContainerGap())
        );
        pnlReqCommentLineGrpLayout.setVerticalGroup(
            pnlReqCommentLineGrpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReqCommentLineGrpLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlReqCommentLineGrpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoReqCommentAllLine)
                    .addComponent(rdoReqCommentFirstLine)
                    .addComponent(rdoReqCommentSecondLine))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        chkDummyResponse.setText("use dummy response if response is null");

        javax.swing.GroupLayout pnlSendToOverrideLayout = new javax.swing.GroupLayout(pnlSendToOverride);
        pnlSendToOverride.setLayout(pnlSendToOverrideLayout);
        pnlSendToOverrideLayout.setHorizontalGroup(
            pnlSendToOverrideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSendToOverrideLayout.createSequentialGroup()
                .addGroup(pnlSendToOverrideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSendToOverrideLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(chkDummyResponse))
                    .addGroup(pnlSendToOverrideLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(pnlSendToOverrideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlSendToOverrideLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(pnlReqNameLineGrp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlSendToOverrideLayout.createSequentialGroup()
                                .addComponent(rdoReqNameAnnotationNotes)
                                .addGap(18, 18, 18)
                                .addComponent(rdoReqNameResponseTitle))))
                    .addGroup(pnlSendToOverrideLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlSendToOverrideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlSendToOverrideLayout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(pnlReqCommentLineGrp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlSendToOverrideLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(rdoReqCommentAnnotationNotes)
                                .addGap(18, 18, 18)
                                .addComponent(rdoReqCommentResponseTitle))
                            .addComponent(chkUseReqName)
                            .addComponent(chkUseReqNotes))))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        pnlSendToOverrideLayout.setVerticalGroup(
            pnlSendToOverrideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSendToOverrideLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chkUseReqName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlSendToOverrideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoReqNameAnnotationNotes)
                    .addComponent(rdoReqNameResponseTitle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlReqNameLineGrp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(chkUseReqNotes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlSendToOverrideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoReqCommentAnnotationNotes)
                    .addComponent(rdoReqCommentResponseTitle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlReqCommentLineGrp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(chkDummyResponse)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        chkOverrideSendToParameter.setText("Override send to parameter");
        chkOverrideSendToParameter.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkOverrideSendToParameterStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chkOverrideSendToParameter)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(pnlSendToOverride, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(chkOverrideSendToParameter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlSendToOverride, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame frame = new javax.swing.JFrame();
                SendToParameterPanel panel = new SendToParameterPanel();
                frame.add(panel);
                frame.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                frame.pack();
                frame.setVisible(true);
            }
        });
    }

    private void chkOverrideSendToParameterStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkOverrideSendToParameterStateChanged
        SwingUtil.setContainerEnable(this.pnlSendToOverride, this.chkOverrideSendToParameter.isSelected());
    }//GEN-LAST:event_chkOverrideSendToParameterStateChanged

    private void rdoReqNameSecondLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoReqNameSecondLineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoReqNameSecondLineActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btnGrpFormat;
    private javax.swing.ButtonGroup btnGrpReqName;
    private javax.swing.ButtonGroup btnGrpReqNameHistoryNotesType;
    private javax.swing.ButtonGroup btnGrpReqNotes;
    private javax.swing.ButtonGroup btnGrpReqNumber;
    private javax.swing.JCheckBox chkDummyResponse;
    private javax.swing.JCheckBox chkOverrideSendToParameter;
    private javax.swing.JCheckBox chkUseReqName;
    private javax.swing.JCheckBox chkUseReqNotes;
    private javax.swing.JPanel pnlReqCommentLineGrp;
    private javax.swing.JPanel pnlReqNameLineGrp;
    private javax.swing.JPanel pnlSendToOverride;
    private javax.swing.ButtonGroup rdoGrpReqNotesHistoryNotesType;
    private javax.swing.JRadioButton rdoReqCommentAllLine;
    private javax.swing.JRadioButton rdoReqCommentAnnotationNotes;
    private javax.swing.JRadioButton rdoReqCommentFirstLine;
    private javax.swing.JRadioButton rdoReqCommentResponseTitle;
    private javax.swing.JRadioButton rdoReqCommentSecondLine;
    private javax.swing.JRadioButton rdoReqNameAllLine;
    private javax.swing.JRadioButton rdoReqNameAnnotationNotes;
    private javax.swing.JRadioButton rdoReqNameFirstLine;
    private javax.swing.JRadioButton rdoReqNameResponseTitle;
    private javax.swing.JRadioButton rdoReqNameSecondLine;
    // End of variables declaration//GEN-END:variables

    private void customizeComponents() {

    }

    public void setProperty(SendToParameterProperty prop) {
        this.chkOverrideSendToParameter.setSelected(prop.isUseOverride());
        this.chkUseReqName.setSelected(prop.isUseReqName());
        if (prop.getReqName() == SendToParameterProperty.SendToParameterType.HISTORY_COMMENT) {
            this.rdoReqNameAnnotationNotes.setSelected(true);
        } else {
            this.rdoReqNameResponseTitle.setSelected(true);
        }

        switch (prop.getReqNameLineType()) {
            case FIRST_LINE:
                this.rdoReqNameFirstLine.setSelected(true);
                break;
            case SECOND_LINE:
                this.rdoReqNameSecondLine.setSelected(true);
                break;
            default:
                this.rdoReqNameAllLine.setSelected(true);
                break;
        }

        this.chkUseReqNotes.setSelected(prop.isUseReqComment());
        if (prop.getReqComment() == SendToParameterProperty.SendToParameterType.HISTORY_COMMENT) {
            this.rdoReqCommentAnnotationNotes.setSelected(true);
        } else {
            this.rdoReqCommentResponseTitle.setSelected(true);
        }

        switch (prop.getReqCommentLineType()) {
            case FIRST_LINE:
                this.rdoReqCommentFirstLine.setSelected(true);
                break;
            case SECOND_LINE:
                this.rdoReqCommentSecondLine.setSelected(true);
                break;
            default:
                this.rdoReqCommentAllLine.setSelected(true);
                break;
        }

//        this.chkUseReqNum.setSelected(prop.isUseReqNum());
//        if (prop.getReqNum() == SendToParameterProperty.SendToParameterType.HISTORY_NUMBER) {
//            this.rdoReqNameHistoryNumber.setSelected(true);
//        }

        this.chkDummyResponse.setSelected(prop.isUseDummyResponse());

    }

    public SendToParameterProperty getSendToOverrideProperty() {
        SendToParameterProperty prop = new SendToParameterProperty();

        prop.setUseOverride(this.chkOverrideSendToParameter.isSelected());
        prop.setUseReqName(this.chkUseReqName.isSelected());
        prop.setReqName(this.rdoReqNameAnnotationNotes.isSelected() ? SendToParameterProperty.SendToParameterType.HISTORY_COMMENT : SendToParameterProperty.SendToParameterType.RESPONSE_TITLE);

        prop.setReqNameLineType(SendToParameterProperty.LinePartType.ALL_LINE);
        if (this.rdoReqNameFirstLine.isSelected())
            prop.setReqNameLineType(SendToParameterProperty.LinePartType.FIRST_LINE);
        if (this.rdoReqNameSecondLine.isSelected())
            prop.setReqNameLineType(SendToParameterProperty.LinePartType.SECOND_LINE);

        prop.setUseReqComment(this.chkUseReqNotes.isSelected());
        prop.setReqComment(this.rdoReqCommentAnnotationNotes.isSelected() ? SendToParameterProperty.SendToParameterType.HISTORY_COMMENT : SendToParameterProperty.SendToParameterType.RESPONSE_TITLE);

        prop.setReqCommentLineType(SendToParameterProperty.LinePartType.ALL_LINE);
        if (this.rdoReqCommentFirstLine.isSelected())
            prop.setReqCommentLineType(SendToParameterProperty.LinePartType.FIRST_LINE);
        if (this.rdoReqCommentSecondLine.isSelected())
            prop.setReqCommentLineType(SendToParameterProperty.LinePartType.SECOND_LINE);

//        prop.setUseReqNum(this.chkUseReqNum.isSelected());
//        prop.setReqNum(SendToParameterProperty.SendToParameterType.HISTORY_NUMBER);

        prop.setUseDummyResponse(this.chkDummyResponse.isSelected());

        return prop;
    }

}
