package yagura.view;

import extension.view.base.CustomDialog;
import java.util.EnumSet;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import yagura.model.SendToExtendProperty;

/**
 *
 * @author isayan
 */
public class SendToServerExtendDlg extends CustomDialog {

    private final static Logger logger = Logger.getLogger(SendToServerExtendDlg.class.getName());

    private final static java.util.ResourceBundle BUNDLE = java.util.ResourceBundle.getBundle("yagura/resources/Resource");

    /**
     * Creates new form NewDialog
     *
     * @param parent
     * @param modal
     */
    public SendToServerExtendDlg(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        customizeComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbetSendToExtend = new javax.swing.JTabbedPane();
        pnlApply = new javax.swing.JPanel();
        btnCancel = new javax.swing.JButton();
        btnOK = new javax.swing.JButton();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        tabbetSendToExtend.setMinimumSize(new java.awt.Dimension(560, 50));
        tabbetSendToExtend.setPreferredSize(new java.awt.Dimension(560, 650));
        getContentPane().add(tabbetSendToExtend, java.awt.BorderLayout.CENTER);

        pnlApply.setMinimumSize(new java.awt.Dimension(0, 0));
        pnlApply.setPreferredSize(new java.awt.Dimension(55, 50));

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlApplyLayout = new javax.swing.GroupLayout(pnlApply);
        pnlApply.setLayout(pnlApplyLayout);
        pnlApplyLayout.setHorizontalGroup(
            pnlApplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlApplyLayout.createSequentialGroup()
                .addContainerGap(375, Short.MAX_VALUE)
                .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlApplyLayout.setVerticalGroup(
            pnlApplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlApplyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlApplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnOK))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        getContentPane().add(pnlApply, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.setModalResult(JOptionPane.CANCEL_OPTION);
        this.closeDialog(null);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        if (this.pnlConnections.isValidation()) {
            this.setModalResult(JOptionPane.OK_OPTION);
            this.closeDialog(null);
        }
    }//GEN-LAST:event_btnOKActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOK;
    private javax.swing.JPanel pnlApply;
    private javax.swing.JTabbedPane tabbetSendToExtend;
    // End of variables declaration//GEN-END:variables

    private final ConnectionsPanel pnlConnections = new ConnectionsPanel();
    private final SendToParameterPanel pnlSendToParameter = new SendToParameterPanel();
    private final SendToArgParamsPanel pnlSendToArgs = new SendToArgParamsPanel();

    private void customizeComponents() {
//        setExtendView(EnumSet.of(SendToExtendProperty.ExtendView.HTTP_EXTEND, SendToExtendProperty.ExtendView.SENDTO_PARAMETER));
        this.tabbetSendToExtend.addTab("Connections", this.pnlConnections);
        this.tabbetSendToExtend.addTab("SendToParameter", this.pnlSendToParameter);
        this.tabbetSendToExtend.addTab("SendToArgs", this.pnlSendToArgs);
        this.pack();
    }

    public void setExtendView(EnumSet<SendToExtendProperty.ExtendView> view) {
        this.tabbetSendToExtend.removeAll();
        if (view.contains(SendToExtendProperty.ExtendView.HTTP_EXTEND)) {
            if (this.tabbetSendToExtend.indexOfTabComponent(this.pnlConnections) < 0) this.tabbetSendToExtend.addTab("Connections", this.pnlConnections);
        }
        if (view.contains(SendToExtendProperty.ExtendView.SENDTO_PARAMETER)) {
            if (this.tabbetSendToExtend.indexOfTabComponent(this.pnlSendToParameter) < 0) this.tabbetSendToExtend.addTab("SendToParameter", this.pnlSendToParameter);
        }
        if (view.contains(SendToExtendProperty.ExtendView.SENDTO_ARGS)) {
            if (this.tabbetSendToExtend.indexOfTabComponent(this.pnlSendToArgs) < 0) this.tabbetSendToExtend.addTab("SendToArgs", this.pnlSendToArgs);
        }
        this.pack();
    }

    public void setProperty(SendToExtendProperty prop) {
        this.pnlConnections.setProperty(prop.getHttpExtendProperty());
        this.pnlSendToParameter.setProperty(prop.getSendToParameterProperty());
        this.pnlSendToArgs.setProperty(prop.getSendToArgsProperty());
    }

    public SendToExtendProperty getProperty() {
        SendToExtendProperty prop = new SendToExtendProperty();
        prop.setProperty(this.pnlConnections.getHttpExtendProperty());
        prop.setProperty(this.pnlSendToParameter.getSendToOverrideProperty());
        prop.setProperty(this.pnlSendToArgs.getSendToOverrideProperty());
        return prop;
    }

}
